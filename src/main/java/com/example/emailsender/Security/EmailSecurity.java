package com.example.emailsender.Security;

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.access.expression.WebExpressionAuthorizationManager;

import static org.springframework.security.config.Customizer.withDefaults;


@EnableWebSecurity
public class EmailSecurity {

    // üí° –í–ê–ñ–ù–û: –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π IP-–∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞
    private static final String PROXY_IP_ADDRESS = "192.168.1.100";
    // –ï—Å–ª–∏ –æ–±–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ localhost, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "127.0.0.1"

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .csrf(csrf -> csrf.disable()) // –û—Ç–∫–ª—é—á–∞–µ–º CSRF –¥–ª—è API
                .authorizeHttpRequests(auth -> auth

                        // 1. –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ /send-email –¢–û–õ–¨–ö–û —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ IP-–∞–¥—Ä–µ—Å–∞
                        .requestMatchers("/send-email")
                        .access(new WebExpressionAuthorizationManager("hasIpAddress('" + PROXY_IP_ADDRESS + "')"))

                        // 2. –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –¥—Ä—É–≥–∏–º URL, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ —è–≤–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤—ã—à–µ,
                        //    –±—É–¥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–ª–∏ –±—É–¥—É—Ç –∑–∞–ø—Ä–µ—â–µ–Ω—ã (–µ—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ .anyRequest().denyAll())
                        .anyRequest().denyAll() // –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ (–∏–ª–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
                );

        return http.build();
    }
}
